# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Controller\:
        resource: '../src/Controller/'
        tags: [ 'controller.service_arguments' ]
        
    my_service:
        class:  config\packages\lexik_jwt_authentication
        arguments: [token_ttl]

    App\OpenApi\JwtDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@.inner' ]
        

    App\OpenApi\Auth\LogoutDecorator:
        decorates: 'api_platform.openapi.factory'
        arguments: [ '@.inner' ]

    App\EventSubscriber\UserCreateEventSubscriber:
        class: App\EventSubscriber\UserCreateEventSubscriber
        tags:
            - { name: kernel.event_subscriber }

    App\EventListener\Auth\LogoutEventListener:
        tags:
            -   name: 'kernel.event_listener' 
                event: 'Symfony\Component\Security\Http\Event\LogoutEvent'
                # dispatcher: security.event_dispatcher.main

    App\Filter\FullTextSearchFilter:
        arguments: [ '@doctrine', ~, '@?logger' ]
        tags: [ 'api_platform.filter' ]

    App\EventListener\Auth\JWTCreatedEventListener:
        class: App\EventListener\Auth\JWTCreatedEventListener
        tags:
            - {
                name: kernel.event_listener,
                event: lexik_jwt_authentication.on_jwt_created,
                method: onJWTCreated,
            }

    App\EventListener\Auth\AuthenticationSuccessEventListener:
        class: App\EventListener\Auth\AuthenticationSuccessEventListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccessResponse }
        autowire: true
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
